<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <context:annotation-config />
    <context:component-scan base-package="org.wrkr.clb.services" />

    <bean class="org.wrkr.clb.common.crypto.TokenGenerator">
        <property name="key" value="${crypto.secret.key}" />
    </bean>

    <bean class="org.wrkr.clb.common.mail.UserMailService">
        <property name="emailHost" value="${email.host}" />
        <property name="emailPort" value="${email.port}" />
        <property name="emailHostUser" value="${email.host.user}" />
        <property name="emailHostPassword" value="${email.host.password}" />
        <property name="emailFrom" value="${email.from}" />

        <property name="host" value="${front.host}" />
    </bean>

    <bean class="org.wrkr.clb.common.mail.DevOpsMailService">
        <property name="emailHost" value="${email.host}" />
        <property name="emailPort" value="${email.port}" />
        <property name="emailHostUser" value="${email.host.user}" />
        <property name="emailHostPassword" value="${email.host.password}" />
        <property name="emailFrom" value="${email.from}" />

        <property name="devOpsEmails" value="${email.devops}" />
        <property name="environment" value="${environment}" />
        <property name="nodeId" value="${node.id}" />
    </bean>

    <bean class="org.wrkr.clb.services.user.impl.DefaultAuthnService">
        <property name="maxFailedLoginAttempts" value="${max.failed.login.attempts}" />
        <property name="rememberMeTokenLifetimeSeconds" value="${rememberme.token.lifetime.seconds}" />
    </bean>

    <bean class="org.wrkr.clb.services.user.impl.DefaultProfileService">
        <property name="notificationTokenNotBeforeToleranceSeconds" value="${notif.token.notbefore.tolerance.seconds}" />
        <property name="notificationTokenLifetimeSeconds" value="${notif.token.lifetime.seconds}" />
    </bean>

    <bean class="org.wrkr.clb.services.user.impl.DefaultUserService">
        <property name="chatTokenNotBeforeToleranceSeconds" value="${chat.token.notbefore.tolerance.seconds}" />
        <property name="chatTokenLifetimeSeconds" value="${chat.token.lifetime.seconds}" />
    </bean>

    <bean class="org.wrkr.clb.services.project.impl.DefaultProjectService">
        <property name="chatTokenNotBeforeToleranceSeconds" value="${chat.token.notbefore.tolerance.seconds}" />
        <property name="chatTokenLifetimeSeconds" value="${chat.token.lifetime.seconds}" />
    </bean>

    <jee:jndi-lookup id="yandexcloudClient" jndi-name="yandexcloud/client/storage" />
    <bean class="org.wrkr.clb.services.api.yandexcloud.impl.DefaultYandexCloudApiService">
    </bean>

    <bean class="org.wrkr.clb.services.project.task.attachment.impl.DefaultAttachmentFileService">
        <property name="host" value="${front.host}" />
    </bean>

    <bean class="org.wrkr.clb.services.project.task.impl.DefaultTaskService">
        <property name="chatTokenNotBeforeToleranceSeconds" value="${chat.token.notbefore.tolerance.seconds}" />
        <property name="chatTokenLifetimeSeconds" value="${chat.token.lifetime.seconds}" />
        <property name="searchSize" value="${task.list.limit}" />
    </bean>

    <bean class="org.wrkr.clb.services.project.task.attachment.impl.DefaultTemporaryAttachmentService">
        <property name="temporaryAttachmentLifetimeSeconds" value="${attachment.tmp.lifetime.seconds}" />
    </bean>

    <task:scheduler id="qirkMainScheduler" />
    <task:scheduled-tasks scheduler="qirkMainScheduler">
        <task:scheduled ref="temporaryAttachmentJobService" method="clearTemporaryAttachments"
            fixed-delay="${attachment.tmp.clear.rate.millis}" />

        <task:scheduled ref="mainSelfCheckJobService" method="checkPostgresMain"
            fixed-rate="${selfcheck.rate.millis}" />
        <task:scheduled ref="mainSelfCheckJobService" method="checkPostgresAuth"
            fixed-rate="${selfcheck.rate.millis}" />
        <task:scheduled ref="mainSelfCheckJobService" method="checkActiveMQQueue"
            fixed-rate="${selfcheck.rate.millis}" />
        <task:scheduled ref="mainSelfCheckJobService" method="checkActiveMQTopic"
            fixed-rate="${selfcheck.rate.millis}" />
    </task:scheduled-tasks>

    <bean class="org.wrkr.clb.services.project.impl.DefaultIssueService">
        <property name="chatTokenNotBeforeToleranceSeconds" value="${chat.token.notbefore.tolerance.seconds}" />
        <property name="chatTokenLifetimeMinutes" value="${chat.token.lifetime.seconds}" />
    </bean>

    <jee:jndi-lookup id="elasticsearchClient" jndi-name="elasticsearch/client" />

    <!-- validation for beans methods START -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
    </bean>
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <property name="validatorFactory" ref="validator" />
    </bean>
    <!-- validation for beans methods FINISH -->

</beans>
