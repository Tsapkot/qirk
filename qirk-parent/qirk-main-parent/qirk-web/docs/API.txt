Response structure:
{
	"status_ok": true/false (true if request was successful)
	"status_code": "OK", (string for front-end to determine what kind of error happened)
	"status_reason": "" (human-readable)
	"data": [], (requested entity/info will be here)
	"meta": null (additional info, like pagination or external uuid)
}

/csrf/refresh
Method: GET
Response.data: [{}]

/authn/login/
Method: POST
Request: {"username":"aaa", "password":"121212", "g_recaptcha_response":""}
Response.data: [{}]

/authn/logout/
Method: POST
Request: {}
Response.data: [{}]

/authn/check/
Method: GET
Response.data: [{
	"id":1, (null if not authenticated)
	"email":"a@qirk.org",
	"username":"aaa",
	"full_name":"aaa",
	"manager":false
}

/user/check-email/
Method: GET
Request parameters: email=a@qirk.org
Response.data: [{"exists":false}

/user/check-username/
Method: GET
Request parameters: username=aaa
Response.data: [{"exists":false}

/user/register/
Method: POST
Request: {"email":"a@qirk.org", "license_accepted":true}
Response.data: [{"email_sent":true}

/user/activate/
Method: POST
Request: {"token":"aaa", "username":"aaa", "full_name":"aaa"}
Response.data: [{}]

/user/reset-password/
Method: POST
Request: {"email": "a@qirk.org"}
Response.data: [{"email_sent":true}

/user/change-password/
Method: PUT
Request: {
	"password":"aaa",
	"new_password":"aaa",
	"token":"aaa"
}
Response.data: [{}]

/user/
Method: GET
Request parameters: id=1
Response.data: [{
	"id":2,
	"username":"t1614668",
	"full_name":"My humble name",
	"tags": [{"id":3, "name":"tag2"}, {"id":4, "name":"tag1"}],
	"languages": [{"id":1,"name_code":""}, {"id":2,"name_code":""}]
}

/user/list/
Method: GET
Request parameters: id=1,2
Response.data: [
	{"id":1, "username":"aaa", "full_name":"aaa"},
	{"id":2, "username":"bbb", "full_name":"bbb"}
]

/user/profile/
Method: GET
Response.data: [{
	"email":"",
	"username":"",
	"full_name":"a",
	"tags":[{"id":1,"name":""}],
	"languages": [{"id":1,"name_code":""}, {"id":2,"name_code":""}],
	"notification_settings": {"task_created":true, "task_updated":true, "task_commented":true}
}

/user/profile/
Method: PUT
Request: {
	"full_name":"",
	"tags":["aaa","bbb"],
	"languages":[1,2],
	"notification_settings": {"task_created":true, "task_updated":true, "task_commented":true}
}
Response.data: [{
	"email":"",
	"username":"",
	"full_name":"a",
	"tags":[{"id":1,"name":""}],
	"languages": [{"id":1,"name_code":""}, {"id":2,"name_code":""}],
	"notification_settings": {"task_created":true, "task_updated":true, "task_commented":true}
}

/language/list/
Method: GET
Response.data: [
	{"id":1, "name_code":"EN_US"},
	{"id":2, "name_code":"RU_RU"}
]

/user/notification-token/
Method: GET
Response.data: [{
	"token":"aaa",
	"IV":"aaa"
}

/user/search-for-project/?prefix=aaa&project_id=
/user/search-for-project/?prefix=aaa&project_ui_id=
Method: GET
Request parameters:
	prefix=a
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [
	{"id":1, "username":"aaa", "full_name":"aaa"},
	{"id":2, "username":"bbb", "full_name":"bbb"}
]

/project/check-ui-id/
Method: GET
Request parameters: ui_id=aaa
Response.data: [{"exists": false}

/project/
Method: POST
Request: {
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description":"",
	"tags":["aaa","bbb"],
	"languages":[1,2]
}
Response.data: [{
	"id":1,
	"record_version":1,
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description_md":"abc",
	"description_html":"<p>abc</p>",
	"tags":[{"id":1,"name":"aaa"}, {"id":2,"name":"bbb"}],
	"languages":[{"id":1,"name_code":"EN_US"}, {"id":2,"name_code":"RU_RU"}]
}

/project/
Method: PUT
Request: {
	"id":1,
	"record_version":1,
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description":"",
	"tags":["aaa","bbb"],
	"languages":[1,2]
}
Response.data: [{
	"id":1,
	"record_version":2,
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description_md":"abc",
	"description_html":"<p>abc</p>",
	"tags":[{"id":1,"name":"aaa"}, {"id":2,"name":"bbb"}],
	"languages":[{"id":1,"name_code":"EN_US"}, {"id":2,"name_code":"RU_RU"}]
}

/project/
Method: GET
Request parameters:
	id=1						(exactly one of 'id', 'ui_id' must be present)
	ui_id=aaa					(exactly one of 'id', 'ui_id' must be present)
	include_application=true	(default: false)
Response.data: [{
	"id":1,
	"record_version":1,
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description_md":"abc",
	"description_html":"<p>abc</p>",
	"tags":[{"id":1,"name":"aaa"}, {"id":2,"name":"bbb"}],
	"languages":[{"id":1,"name_code":"EN_US"}, {"id":2,"name_code":"RU_RU"}],
	"is_member":false,
	"write_allowed":false,
	"can_manage":false,
	"application": {"id":1, "status": {"id":1, "name_code":"PENDING"}} (if include_application=true)
}

/project/documentation/
Method: PUT
Request: {
	"id":1,
	"record_version":1,
	"documentation":"aaa"
}
Response.data: [{
	"id":1,
	"record_version":2,
	"name":"",
	"ui_id":"",
	"key":"",
	"private":false,
	"description_md":"abc",
	"description_html":"<p>abc</p>",
	"documentation_md":"abc",
	"documentation_html":"<p>abc</p>",
	"tags":[{"id":1,"name":"aaa"}, {"id":2,"name":"bbb"}],
	"languages":[{"id":1,"name_code":"EN_US"}, {"id":2,"name_code":"RU_RU"}]
}

/project/documentation/
Method: GET
Request parameters:
	id=1		(exactly one of 'id', 'ui_id' must be present)
	ui_id=aaa	(exactly one of 'id', 'ui_id' must be present)
Response.data: [{
	"id":1,
	"record_version":1,
	"documentation_md":"abc",
	"documentation_html":"<p>abc</p>"
}

/project/list-by-user/
Method: GET
Request parameters: managed=true (default: false)
Response.data: [{
	"id":1,
	"name":"aaa",
	"ui_id":"aaa"
}]

/project/list-invite-options/
Method: GET
Request parameters: user_id=1
Response.data: [{
	"id":1,
	"name":"aaa",
	"ui_id":"aaa",
	"is_member":false,
	"invite": { (nullable)
		"id":1,
		"status": {"id":1, "name_code":"PENDING"},
	}
}]

/project/chat-token/
Method: GET
Request parameters: id=1
Response.data: [{
	"token": "aaa",
	"IV": "aaa",
	"can_read":true,
	"can_write":false
}

/task/
Method: POST
Request: {
	"project": {"id":1},
	"description":"aaa",
	"assignee":1, (nullable)
	"assign_to_me":false, (nullable)
	"task_type":"TYPE", (nullable)
	"task_priority":"PRIORITY", (nullable)
	"task_status":"STATUS",
	"linked_tasks": [1, 2],
	"hashtag_ids": [1, 2],
	"hashtag_names": ["aaa", "bbb"]
}
OR {
	"project": {"ui_id":"aaa"},
	"description":"aaa",
	"assignee":1, (nullable)
	"assign_to_me":false, (nullable)
	"task_type":"TYPE", (nullable)
	"task_priority":"PRIORITY", (nullable)
	"task_status":"STATUS",
	"linked_tasks": [1, 2],
	"hashtag_ids": [1, 2],
	"hashtag_names": ["aaa", "bbb"]
}
Response.data: [{
	"id":2,
	"record_version":1,
	"number":2,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"description_html":"<p>aaa</p>",
	"description_md":"aaa",
	"reporter": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"assignee": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"task_type":{"id":1,"name_code":"TASK"},
	"task_priority":{"id":1, "name_code":"TRIVIAL"},
	"task_status":{"id":1, "name_code":"OPEN"},
	"hashtags":[{"id":1, "name":"aaa"}]
}

/task/
Method: PUT
Request: {
	"id":1,
	"record_version":1,
	"description":"aaa",
	"assignee":1, (nullable)
	"assign_to_me":false, (nullable)
	"task_type":"TYPE", (nullable)
	"task_priority":"PRIORITY", (nullable)
	"task_status":"STATUS",
	"hashtag_ids": [1, 2],
	"hashtag_names": ["aaa", "bbb"]
}
Response.data: [{
	"id":1,
	"record_version":2,
	"number":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"description_html":"<p>aaa</p>",
	"description_md":"aaa",
	"reporter": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"assignee": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"task_type":{"id":1,"name_code":"TASK"},
	"task_priority":{"id":1, "name_code":"TRIVIAL"},
	"task_status":{"id":1, "name_code":"OPEN"},
	"hashtags":[{"id":1, "name":"aaa"}]
}

/task/
Method: GET
Request parameters:
	id=1		(exactly one of 'id', 'number' must be present)
	number=1	(exactly one of 'id', 'number' must be present)
	project_id=1		(if 'number' is present, exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(if 'number' is present, exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"record_version":1,
	"number":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"description_html":"<p>aaa</p>",
	"description_md":"aaa",
	"reporter": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"assignee": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"task_type":{"id":1,"name_code":"TASK"},
	"task_priority":{"id":1, "name_code":"TRIVIAL"},
	"task_status":{"id":1, "name_code":"OPEN"},
	"hashtags":[{"id":1, "name":"aaa"}],
	"subscribed":true,
	"subscribers_count":1
}

/task/card/
Method: PUT
Request: {
	"id":1,
	"record_version":1,
	"card":1 (nullable)
}
Response.data: [{
	"id":1,
	"record_version":1,
	"card":1 (nullable)
}

/task/link/
Method: POST
Request: {
	"task1":1,
	"task2":2
}
Response.data: [{}]

/task/link/
Method: DELETE
Request: {
	"task1":1,
	"task2":2
}
Response.data: [{}]

/task/list-cardless/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"number":1,
	"summary":"a...",
	"task_priority":{"id":1, "name_code":"TRIVIAL"},
	"task_status":{"id":1, "name_code":"OPEN"}
}]

/task/list-link-options/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"number":1,
	"summary":"a...",
	"assignee": {"id":1, "user": {"id":1, "full_name":"aaa", "username":"a@qirk.org"}},
	"task_status": {"id":1, "name_code":"OPEN"}
}]

/task/text-search/
?project_id=1
&assignee_id=1
&type=type1,type2
&priority=priority1,priority2
&status=status1,status2
&text=aaa&hashtag=aaa
&sort_by=
&ordering=
&search_after=
(reported_by_me, assigned_to_me, assignee and sort_by not required)
(sort_by in: updated_at, assignee, created_at, number, priority, reporter, summary; sort_by=updated_at by default)
(ordering in: asc, desc; ordering=desc by default)
Method: GET
Request parameters:
	project_id=1
	reporter_id=1	(-1 for reported by current user; nullable)
	assignee_id=1	(-1 for assigned to current user; -2 for unassigned; nullable)
	type=TASk,BUG	(nullable)
	priority=MAJOR,MINOR		(nullable)
	status=OPEN,IN_DEVELOPMENT	(nullable)
	text=aaa		(nullable)
	hashtag=aaa		(nullable)
	sort_by=		(one of: CREATED_AT, UPDATED_AT; default: UPDATED_AT)
	ordering=		(one of: ASC, DESC; default: DESC)
	search_after=	(last value of sorted field in previous request; nullable)
Response.data: [{
	"id":1,
	"number":1,
	"summary":"a...",
	"reporter": {"id":1},
	"assignee": {"id":1}, (nullable)
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"task_type": {"name_code":"TASK"},
	"task_priority": {"name_code":"TRIVIAL"},
	"task_status": {"name_code":"OPEN"}
}]
Response.meta: {"total":100}

/task/chat-token/
Method: GET
Request parameters: id=1
Response.data: {
	"token": "aaa",
	"IV": "aaa",
	"can_read":true,
	"can_write":false
}

/task-type/list/
Method: GET
Response.data: [
	{"id":1, "name_code":"AAA"},
	{"id":2, "name_code":"BBB"}
]

/task-priority/list/
Method: GET
Response.data: [
	{"id":1, "name_code":"AAA"},
	{"id":2, "name_code":"BBB"}
]

/task-status/list/
Method: GET
Response.data: [
	{"id":1, "name_code":"AAA"},
	{"id":2, "name_code":"BBB"}
]

/file/upload/
Headers:
	Content-Type: multipart/form-data
Method: POST
Request: task_id=1&file=<binary_data>
Response.meta: {"external_uuid":"aaa"}

/file/upload/
Headers:
	Content-Type: multipart/form-data
Method: POST
Request: project_id=1&file=<binary_data>
Response.data: {"uuid":"aaa"}
Response.meta:: {"external_uuid":"aaa"}

/file/get/{id}/{filename}/
Method: GET
Response status: 303 (redirects to download link)

/attachment/
Method: POST
Request: {
	"task":1,
	"uuids": ["aaa","bbb"]
}
Response.data: [
	{"id":1, "filename":"aaa.txt", "url": "/file/get/1/aaa.txt"},
	{"id":2, "filename":"bbb.txt", "url": "/file/get/2/bbb.txt"}
]

/attachment/list/
Method: GET
Request parameters: task_id=1
Response.data: [
	{"id":1, "filename":"aaa.txt", "url": "/file/get/1/aaa.txt"},
	{"id":2, "filename":"bbb.txt", "url": "/file/get/2/bbb.txt"}
]

/attachment/
Method: DELETE
Request: {
	"id":1
}
Response.data: {}

/user-favorite/
Method: POST
Request: {"project":1}
Response.data: {
	"id":1,
	"project": {
		"id":1,
		"name":"aaa",
		"ui_id":"aaa"
	}
}

/user-favorite/move/
Method: PUT
Request: {
	"id":1,
	"previous":2 (nullable)
}
Response.data: {
	"id":1,
	"project": {
		"id":1,
		"name":"aaa",
		"ui_id":"aaa"
	}
}

/user-favorite/list/
Method: GET
Response.data: [{
	"id":1,
	"project": {
		"id":1,
		"name":"aaa",
		"ui_id":"aaa"
	},
	"can_create_task":true
}]

/user-favorite/
Method: DELETE
Request: {"id":1}
Response.data: {}

/memo/
Method: POST
Request: {
	"project": {"id":1},
	"body":"aaa"
}
OR {
	"project": {"ui_id":"aaa"},
	"body":"aaa"
}
Response.data: [{
	"id":1,
	"body":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"author": {"id":1, "username":"aaa"},
	"can_delete":true
}]

/memo/list/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"body":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"author": {"id":1, "username":"aaa"},
	"can_delete":false
}]

/memo/
Method: DELETE
Request: {"id":1}
Response.data: {}

/issue/
Method: POST
Request: {
	"project": {"id":1},
	"summary":"a",
	"description":"aaa"
}
OR {
	"project": {"ui_id":"aaa"},
	"summary":"a",
	"description":"aaa"
}
Response.data: {
	"id":1,
	"summary":"a",
	"description":"aaa",
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"created_at":"2019-03-20T17:12:36.3+0500"
}

/issue/
Method: PUT
Request: {
	"id":1,
	"summary":"a",
	"description":"aaa"
}
Response.data: {
	"id":1,
	"summary":"a",
	"description":"aaa",
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"created_at":"2019-03-20T17:12:36.3+0500"
}

/issue/
Method: GET
Request parameters: id=1
Response.data: {
	"id":1,
	"summary":"a",
	"description":"aaa",
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"created_at":"2019-03-20T17:12:36.3+0500"
}

/issue/list/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"summary":"a",
	"description":"aaa",
	"user": {"id":1, "alias":"aaa", "first_name":"aaa", "last_name":"aaa"},
	"created_at":"2019-03-20T17:12:36.3+0500"
}]

/issue/chat-token/
Request parameters: id=1
Method: GET
Response.data: {
	"token": "aaa",
	"IV": "aaa",
	"can_read":true,
	"can_write":false
}

DEPRECATED
/project-invite/
Method: POST
Request: {
	"user":1,
	"project":1,
	"text":"aaa"
}

DEPRECATED
/project-invite/?id=1
Method: GET
Response.data: {
	"id":1,
	"user": {"id":1, "alias":"aaa", "first_name":"aaa", "last_name":"aaa"},
	"project": {"id":1, "name":"aaa", "ui_id":"aaa", "organization:{"id":1, "name":"aaa", "ui_id":"aaa"}},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"}
}

DEPRECATED
/project-invite/list-by-user/
Method: GET
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa", "organization:{"id":1, "name":"aaa", "ui_id":"aaa"}},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500"
}]

DEPRECATED
/project-invite/accept/
Method: PUT
Request: {"id":1}

DEPRECATED
/project-invite/reject/
Method: PUT
Request: {
	"id":1,
	"reported":false
}

DEPRECATED
/project-invite/list-by-project/?project_id=1
/project-invite/list-by-project/?project_ui_id=aaa
Method: GET
Response.data: [{
	"id":1,
	"user": {"id":1, "alias":"aaa", "first_name":"aaa", "last_name":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"}
}]

DEPRECATED
/project-invite/cancel/
Method: DELETE
Request: {
	"id":1
}

DEPRECATED
/project-invite/execute/
Method: POST
Request: {
	"id":1,
	"write_allowed":false,
	"manager":false
}


/granted-permissions-project-invite/
Method: POST
Request: {
	"user":1,
	"project":1,
	"text":"aaa",
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"},
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/create-by-email/
Method: POST
Request: {
	"email":"a@qirk.org",
	"project":1,
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"email": "a@qirk.org",
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"},
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/
Method: PUT
Request: {
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/
Method: GET
Request parameters: id=1
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},	(only one of 'user', 'email' will be present)
	"email": "a@qirk.org",									(only one of 'user', 'email' will be present)
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"},
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/list-by-user/
Method: GET
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/accept/
Method: POST
Request: {"id":1}
Response.data: {}

/granted-permissions-project-invite/reject/
Method: PUT
Request: {
	"id":1,
	"reported":false
}
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/list-by-project/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
	include_email=true
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},	(only one of 'user', 'email' will be present)
	"email": "a@qirk.org",									(only one of 'user', 'email' will be present)
	"email": "a@qirk.org",
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"},
	"write_allowed":false,
	"manager":false
}]

/granted-permissions-project-invite/cancel/
Method: DELETE
Request: {"id":1}
Response.data: {}

/project-invite-token/check-token/
Method: GET
Request parameters: token=aaa
Response.data: {"registered":false}

/project-invite-token/accept/
Method: POST
Request: {
	"token":"aaa",
	"password":"aaa", (nullable)
	"username":"aaa", (nullable)
	"full_name":"aaa" (nullable)
}
Response.data: {}

/project-invite-token/reject/
Method: PUT
Request: {
	"token":"aaa",
	"reported":false
}
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"write_allowed":false,
	"manager":false
}]

/project-application/
Method: POST
Request: {
	"project":1,
	"text":"aaa"
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"}
}]

/project-application/list-by-project/
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"user": {"id":1, "alias":"aaa", "first_name":"aaa", "last_name":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500"
}]

/project-application/reject/
Method: PUT
Request: {
	"id":1,
	"reported":false
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500"
}]

/project-application/accept/
Method: POST
Request: {
	"id":1,
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500"
}]

/project-application/list-by-user/
Method: GET
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"text":"aaa",
	"created_at":"2019-03-20T17:12:36.3+0500",
	"updated_at":"2019-03-20T17:12:36.3+0500",
	"status": {"id":1, "name_code":"PENDING"}
}]

/project-application/cancel/
Method: DELETE
Request: {"id":1}
Response.data: {}

/project-member/
Method: POST
Request: {
	"user":1, (-1 for current user)
	"project":1,
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"write_allowed":false,
	"manager":false
}]

/project-member/create-batch/
Method: POST
Request: {
	"project":1,
	"members": [{
		"user":1,
		"write_allowed":false,
		"manager":false
	}]
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"write_allowed":false,
	"manager":false
}]

/project-member/
Method: PUT: {
	"id":1,
	"write_allowed":false,
	"manager":false
}
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"write_allowed":false,
	"manager":false
}]

/project-member/list-by-project/?project_id=1
/project-member/list-by-project/?project_ui_id=aaa
Method: GET
Request parameters:
	project_id=1		(exactly one of 'project_id', 'project_ui_id' must be present)
	project_ui_id=aaa	(exactly one of 'project_id', 'project_ui_id' must be present)
Response.data: [{
	"id":1,
	"user": {"id":1, "username":"aaa", "full_name":"aaa"},
	"write_allowed":false,
	"manager":false
}]

/project-member/list-by-user/
Method: GET
Request parameters: user_id=1
Response.data: [{
	"id":1,
	"project": {"id":1, "name":"aaa", "ui_id":"aaa"},
	"hired_at":"2019-03-20T17:12:36.3+0500",
	"fired_at":"2019-03-20T17:12:36.3+0500",
	"fired":true
}]

/project-member/
Method: DELETE
Request: {"id":1}
Response.data: {}

/project-member/leave/
Method: DELETE
Request: {"project":1}
Response.data: {}

/task-hashtag/search/?prefix=a&project_id=&include_used=
/task-hashtag/search/?prefix=a&project_ui_id=&include_used=
(include_used=false by default)
Method: GET: [
	{"id":1, "name":"aaa", "used":true}, (no "used" field if include_used=false)
	{"id":2, "name":"abb", "used":true}
]

/task-hashtag/
Method: DELETE: {
	"id":1
}

/task-subscriber/
Method: POST: {
	"task_id":1
}

/task-subscriber/list/?task_id=1
Method: GET: {
	"users": [1, 2]
}

/task-subscriber/
Method: DELETE: {
	"task_id":1
}

/static-data/changelog/
Accept: text/html
Method: GET: <HTML file>

/static-data/license/
Accept: text/html
Method: GET: <HTML file>

/road/
Method: POST: {
	"project":1,
	"name":"aaa"
}

/road/
Method: PUT: {
	"id":1,
	"record_version":1,
	"name":"aaa"
}

/road/move/
Method: PUT: {
	"id":1,
	"old_previous":1, (nullable)
	"old_next":1, (nullable)
	"previous":1, (nullable)
	"next":1 (nullable)
}

/road/list/?project_id=
/road/list/?project_ui_id=
Method: GET: [{
	"id":1,
	"record_version":1,
	"name":"aaa",
	"cards" [{
		"id":1,
		"record_version":1,
		"name":"aaa",
		"status":"ACTIVE",
		"created_at":""2019-03-20T17:12:36.3+0500",
		"tasks": [{
			"id"1,
			"record_version":1,
			"number":1,
			"summary":"aaa",
			"task_priority":{"id":1, "name_code":"TRIVIAL"},
			"task_status":{"id":1, "name_code":"OPEN"}
		}]
	}]
}]

/road/
Method: DELETE: {
	"id":1
}

/task-card/
Method: POST: {
	"road":1,
	"name":"aaa",
	"status":"ACTIVE"
}

/task-card/
Method: PUT: {
	"id":1,
	"record_version":1,
	"name":"aaa",
	"status":"ACTIVE"
}

/task-card/move/
Method: PUT: {
	"id":1,
	"old_previous":1, (nullable)
	"old_next":1, (nullable)
	"previous":1, (nullable)
	"next":1, (nullable)
	"road":1 (nullable)
}

/task-card/list/?project_id=
/task-card/list/?project_ui_id=
Method: GET: [{
	"id":1,
	"record_version":1,
	"name":"aaa",
	"status":"ACTIVE",
	"created_at":""2019-03-20T17:12:36.3+0500",
	"archieved_at":""2019-03-20T17:12:36.3+0500",
	"road": {"id":1, "record_version":1, "name":"aaa"}
}]

/task-card/archive/
Method: PUT: {
	"id":1,
	"record_version":1
}

/task-card/archive/?project_id=
/task-card/archive/?project_ui_id=
Method: GET: [{
	"id":1,
	"record_version":1,
	"name":"aaa",
	"status":"ACTIVE",
	"created_at":""2019-03-20T17:12:36.3+0500",
	"archieved_at":""2019-03-20T17:12:36.3+0500",
	"road": {"id":1, "record_version":1, "name":"aaa"}
}]

/task-card/
Method: DELETE: {
	"id":1
}

/jira-import/upload/
Content-Type: multipart/form-data
Method: POST: organization_id=1&file=
Response.data:  {
	"timestamp": {"iso8601":"2019-03-20T17:12:36.3+0500", "epoch_milli":1},
	"archive_filename":"aaa.zip",
	"imported_projects" []
}

/jira-import/list-uploads/?organization_id=
Method: GET: [{
	"timestamp": {"iso8601":"2019-03-20T17:12:36.3+0500", "epoch_milli":1},
	"archive_filename":"aaa.zip",
	"imported_projects" [
		{"id":1, "name":"aaa", "jira_id":10000, "jira_key":"AAA", "jira_name":"aaa", "updated_at": "2019-03-20T17:12:36.3+0500"},
		{"id":2, "name":"bbb", "jira_id":10001, "jira_key":"BBB", "jira_name":"bbb", "updated_at": "2019-03-20T17:12:36.3+0500"}
	]
}]

/jira-import/list-projects/?organization_id=&timestamp=
Method: GET: [
	{"id":"10000", "key":"AAA", "name":"aaa"},
	{"id":"10001", "key":"BBB", "name":"bbb"}
]
Error codes:
ENTITIES_FILE_NOT_FOUND - file 'entities.xml' was not found in upload at said timestamp

/jira-import/list-projects-data/?organization_id=&timestamp=&project_id=10000,10001
Method: GET: {
	"projects": [
		{"id":"10000", "key":"AAA", "name":"aaa"},
		{"id":"10001", "key":"BBB", "name":"bbb"}
	],
	"users": [
		{"id":"10000", "username":"aaa", "display_name":"aaa", "email":"a@qirk.org"},
		{"id":"10002", "username":"bbb", "display_name":"bbb", "email":"b@b.com"}
	],
	"types": [
		{"id":"10000", "name":"aaa"},
		{"id":"10001", "name":"bbb"}
	],
	"priorities": [
		{"id":"10000", "name":"aaa"},
		{"id":"10001", "name":"bbb"}
	],
	"statuses": [
		{"id":"10000", "name":"aaa"},
		{"id":"10001", "name":"bbb"}
	],
	"qirk": {
		"imported_projects": [
			{"id":1, "name":"aaa", "ui_id":"aaa"},
			{"id":2, "name":"bbb", "ui_id":"bbb"}
		],
		"members": [
			{"id":1, "enabled":true, "user": {"id":1, "username":"aaa", "full_name":"aaa"}},
			{"id":2, "enabled":true, "user": {"id":2, "username":"bbb", "full_name":"bbb"}}
		],
		"types": [
			{"name_code":"TASK", "default":true},
			{"name_code":"BUG", "default":false}
		],
		"priorities": [
			{"name_code":"MAJOR", "default":true},
			{"name_code":"MINOR", "default":false}
		],
		"statuses": [
			{"name_code":"OPEN", "default":true},
			{"name_code":"CLSOED", "default":false}
		]
	}
}

/jira-import/
Method: POST
Request: {
	"organization":1,
	"timestamp":1,
	"projects": ["10000", "10001"],
	"private"false,
	"override_tasks": "ALL", (one of: "ALL", "NON_UPDATED", "NONE"; default: "ALL")
	"project_mapping": {
		"10000":1 (jira id to qirk id)
	}.
	"members": {
		"admin":1 (jira username to qirk id)
	}.
	"types": {
		"10000":"TASK" (jira id to qirk name_code)
	},
	"priorities": {
		"10000":"MAJOR" (jira id to qirk name_code)
	},
	"statuses": {
		"10000":"OPEN" (jira id to qirk name_code)
	}
}
Response.data: [
	{"jira_project":"10000", "status":"CREATED"},
	{"jira_project":"10001", "status":"UPDATED"},
	{"jira_project":"10002", "status":"PARTIALLY_UPDATED", "failed_task_numbers":[1, 2]},
	{"jira_project":"10003", "status":"CREATE_FAILED", "error_code": "ERROR"},
	{"jira_project":"10004", "status":"UPDATE_FAILED", "error_code": "ERROR"}
]

/notification-settings/
Method: PUT
Request: {
	"token":"aaa",
	"IV":"aaa",
	"task_created":true,
	"task_updated":true,
	"task_commented":true
}
